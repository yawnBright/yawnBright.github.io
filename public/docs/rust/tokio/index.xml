<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tokio on yawnBright&#39;s Blog</title>
    <link>http://localhost:1313/docs/rust/tokio/</link>
    <description>Recent content in Tokio on yawnBright&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 12 Feb 2025 23:02:10 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/docs/rust/tokio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>同步锁与异步锁</title>
      <link>http://localhost:1313/docs/rust/tokio/%E5%90%8C%E6%AD%A5%E9%94%81%E4%B8%8E%E5%BC%82%E6%AD%A5%E9%94%81/</link>
      <pubDate>Wed, 12 Feb 2025 23:02:10 +0800</pubDate>
      <guid>http://localhost:1313/docs/rust/tokio/%E5%90%8C%E6%AD%A5%E9%94%81%E4%B8%8E%E5%BC%82%E6%AD%A5%E9%94%81/</guid>
      <description>&lt;h2 id=&#34;同步锁不能跨await&#34;&gt;同步锁不能跨.await &lt;a href=&#34;#%e5%90%8c%e6%ad%a5%e9%94%81%e4%b8%8d%e8%83%bd%e8%b7%a8await&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;下面这段代码无法通过编译，&lt;code&gt;future cannot be sent between threads safely, the trait_Send_ is not implemented for std::sync::MutexGuard&amp;lt;&#39;_, i32&amp;gt;, which is required by{async block@src/main.rs:13:18: 13:28}: Send&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;  &#xA;  &#xA;  &#xA;&#xA;  &#xA;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xA;  &lt;pre id=&#34;0d0c7d0&#34; class=&#34;language-rust &#34;&gt;&#xA;  &lt;code&gt;use std::sync::{Arc, Mutex};&#xA;use tokio;&#xA;&#xA;#[tokio::main]&#xA;async fn main() {&#xA;    let data = Arc::new(Mutex::new(20));&#xA;    let data_copy = data.clone();&#xA;    tokio::spawn(async move {&#xA;        let mut d = data_copy.lock().unwrap();&#xA;        *d &amp;#43;= 1;&#xA;&#xA;        tokio::time::sleep(tokio::time::Duration::from_secs(5)).await;&#xA;        // *d &amp;#43;= 1;&#xA;    });&#xA;    println!(&amp;#34;Hello, world!&amp;#34;);&#xA;    loop {}&#xA;}&lt;/code&gt;&#xA;  &lt;/pre&gt;&#xA;  &lt;/div&gt;&#xA;&lt;p&gt;标准库的同步互斥锁无法在线程间安全的传递&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;AI 解释：&#xA;标准库中的 std::sync::Mutex 是基于操作系统的同步原语实现的，它是同步锁。&#xA;当一个线程获取到 Mutex 锁后，其他线程在尝试获取该锁时会被阻塞，直到持有锁的线程释放锁。&#xA;而且，标准库的 Mutex 是和线程绑定的，它假设锁的获取和释放操作都在同一个线程中完成&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
